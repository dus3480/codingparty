package test;

import java.util.Scanner;
import java.util.Stack;

class Main {

	// Implement this class.
	// Please use stack only.
	static class Queue {

		/*
		 * Description:
		 * Time complexity:
		 * Space complexity:
		 */
		Stack<Integer> mStack = new Stack<Integer>();
		int[] mTemp;
		
		public void enqueue(int v) {
			if(!mStack.isEmpty()) { 
				mTemp = new int[mStack.size()];
				int mStackSize = mStack.size();
				for(int i=0;i<mStackSize;i++) {
					mTemp[i] = mStack.pop();
				}
				mStack.push(v);
				for(int i=mStackSize-1;i>=0;i--) {
					mStack.push(mTemp[i]);
				}
			}
			else {
				mStack.push(v);
			}
		}

		/*
		 * Description:
		 * Time complexity:
		 * Space complexity:
		 */
		public int dequeue() {
			return mStack.pop();
		}
	}

	public static void main(String[] args) throws Exception {
		Scanner scan = new Scanner(System.in);

		Queue queue = new Queue();
		String input = scan.nextLine();
		int count = Integer.parseInt(input);

		for (int i = 0; i < count; ++ i) {
			String[] token = scan.nextLine().split(" ");
			if ("ENQUEUE".equals(token[0])) {
				queue.enqueue(Integer.parseInt(token[1]));
			} else if ("DEQUEUE".equals(token[0])) {
				System.out.println(queue.dequeue());
			}
		}

		scan.close();
	}

}
